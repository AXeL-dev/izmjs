{
  "List items": {
    "scope": "javascript",
    "prefix": "iam:rest:list",
    "body": [
      "/**",
      " * @params",
      " * [{",
      " *   \"key\": \"\\$top\",",
      " *   \"value\": \"10\",",
      " *   \"description\": \"Number of items to resturn\"",
      " * }, {",
      " *   \"key\": \"\\$skip\",",
      " *   \"value\": \"0\",",
      " *   \"description\": \"Number of items to skip\"",
      " * }]",
      " */",
      "get: {",
      "  iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:list',",
      "  title: 'List entities',",
      "  parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "  description: 'List and navigate through entities',",
      "  middlewares: [",
      "    rest.list('${1:Model}'),",
      "  ],",
      "},",
    ],
    "description": "List available items of a specific model"
  },
  "Create new item": {
    "scope": "javascript",
    "prefix": "iam:rest:create",
    "body": [
      "/**",
      " * @body",
      " * {}",
      " *",
      " * @test",
      " * pm.test(\"Status code is 201\", function () {",
      " *   pm.response.to.have.status(201);",
      " *   const { _id: id } = pm.response.json();",
      " *   pm.environment.set('${3:entity}Id', id);",
      " * });",
      " */",
      "post: {",
      "  iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:create',",
      "  title: 'Create new entity',",
      "  parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "  description: 'Create a new entity and persist it to the database',",
      "  middlewares: [",
      "    rest.create('${2:Model}'),",
      "  ],",
      "},",
    ],
    "description": "Create a new item for a given model"
  },
  "Get by Id": {
    "scope": "javascript",
    "prefix": "iam:rest:param",
    "body": [
      "params: [{",
      "  name: '${3:entity}Id',",
      "  middleware: rest.getById('${2:Model}'),",
      "}],",
    ],
    "description": "Configure the parameter"
  },
  "Remove item": {
    "scope": "javascript",
    "prefix": "iam:rest:removeOne",
    "body": [
      "delete: {",
      "  iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:one:remove',",
      "  title: 'Remove an existing entity',",
      "  parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "  description: 'Remove an existing entity from the database',",
      "  middlewares: [",
      "    rest.removeOne,",
      "  ],",
      "},",
    ],
    "description": "Remove an existing item"
  },
  "Get item": {
    "scope": "javascript",
    "prefix": "iam:rest:getOne",
    "body": [
      "/**",
      " * @params",
      " * [{",
      " *   \"key\": \"\\$select\",",
      " *   \"value\": \"\",",
      " *   \"description\": \"Attributes to select. The field should be separated by ','.\"",
      " * }]",
      " */",
      "get: {",
      "  iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:one:get',",
      "  title: 'Retrieve an entity',",
      "  parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "  description: 'Get an existing entity',",
      "  middlewares: [",
      "    rest.getOne,",
      "  ],",
      "},",
    ],
    "description": "Get an existing item"
  },
  "Update item": {
    "scope": "javascript",
    "prefix": "iam:rest:updateOne",
    "body": [
      "/**",
      " * @body",
      " * {}",
      " */",
      "put: {",
      "  iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:one:update',",
      "  title: 'Update an entity',",
      "  parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "  description: 'Update an existing entity',",
      "  middlewares: [",
      "    rest.updateOne,",
      "  ],",
      "},",
    ],
    "description": "Update an existing item"
  },
  "Initialize the IAM REST file": {
    "prefix": "iam:rest",
    "body": [
      "const rest = require('@packages/rest');",
      "",
      "/**",
      " * @type { IAM.default }",
      " */",
      "module.exports = {",
      "  prefix: '/${1:entities}',",
      "  params: [{",
      "    name: '${3:entity}Id',",
      "    middleware: rest.getById('${2:Model}'),",
      "  }],",
      "  routes: [{",
      "    path: '/',",
      "    methods: {",
      "      /**",
      "       * @params",
      "       * [{",
      "       *   \"key\": \"\\$top\",",
      "       *   \"value\": \"10\",",
      "       *   \"description\": \"Number of items to resturn\"",
      "       * }, {",
      "       *   \"key\": \"\\$skip\",",
      "       *   \"value\": \"0\",",
      "       *   \"description\": \"Number of items to skip\"",
      "       * }]",
      "       */",
      "      get: {",
      "        iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:list',",
      "        title: 'List entities',",
      "        parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "        description: 'List and navigate through entities',",
      "        middlewares: [",
      "          rest.list('${2:Model}'),",
      "        ],",
      "      },",
      "      /**",
      "       * @body",
      "       * {}",
      "       *",
      "       * @test",
      "       * pm.test(\"Status code is 201\", function () {",
      "       *   pm.response.to.have.status(201);",
      "       *   const { _id: id } = pm.response.json();",
      "       *   pm.environment.set('${3:entity}Id', id);",
      "       * });",
      "       */",
      "      post: {",
      "        iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:create',",
      "        title: 'Create new entity',",
      "        parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "        description: 'Create a new entity and persist it to the database',",
      "        middlewares: [",
      "          rest.create('${2:Model}'),",
      "        ],",
      "      },",
      "    },",
      "  }, {",
      "    path: '/:${3:entity}Id',",
      "    methods: {",
      "      /**",
      "       * @params",
      "       * [{",
      "       *   \"key\": \"\\$select\",",
      "       *   \"value\": \"\",",
      "       *   \"description\": \"Attributes to select. The field should be separated by ','.\"",
      "       * }]",
      "       */",
      "      get: {",
      "        iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:one:get',",
      "        title: 'Retrieve an entity',",
      "        parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "        description: 'Get an existing entity',",
      "        middlewares: [",
      "          rest.getOne,",
      "        ],",
      "      },",
      "      delete: {",
      "        iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:one:remove',",
      "        title: 'Remove an existing entity',",
      "        parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "        description: 'Remove an existing entity from the database',",
      "        middlewares: [",
      "          rest.removeOne,",
      "        ],",
      "      },",
      "      /**",
      "       * @body",
      "       * {}",
      "       */",
      "      put: {",
      "        iam: '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}:one:update',",
      "        title: 'Update an entity',",
      "        parents: ['${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2/}', '${TM_FILEPATH/(?:.*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]([^\\/\\\\]*)[\\/\\\\]iam[\\/\\\\]([^.\\/\\\\]*)\\.server\\.iam\\.js/$1:$2:$3/}'],",
      "        description: 'Update an existing entity',",
      "        middlewares: [",
      "          rest.updateOne,",
      "        ],",
      "      },",
      "    },",
      "  }],",
      "};",
      ""
    ],
    "description": "Initialize the IAM REST file"
  }
}
